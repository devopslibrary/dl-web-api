trigger:
  - master

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'docker run -p 6379:6379 --name redis -d redis'
    displayName: 'Start Redis'
  - task: NodeTool@0
    inputs:
      versionSpec: '10.x'
    displayName: 'Install Node.js'
  - task: DownloadSecureFile@1
    name: envFile
    inputs:
      secureFile: 'development.env'
  - script: |
      mv $(envFile.secureFilePath) development.env
    displayName: Create development.env
  - script: |
      yarn install
    displayName: 'Yarn Install'
  - script: |
      yarn test --testPathIgnorePatterns getAllBranches --testPathIgnorePatterns getOrgs
    displayName: 'Jest Testing'
    env:
      AUTH0_CLIENT_AUDIENCE: $(AUTH0_CLIENT_AUDIENCE)
      AUTH0_CLIENT_ID: $(AUTH0_CLIENT_ID)
      AUTH0_CLIENT_SECRET: $(AUTH0_CLIENT_SECRET)
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'docker stop redis'
    displayName: 'Stop Redis'
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'SonarCloud DevOpsLibrary'
      organization: 'devopslibrary'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: 'dl-web-api'
      cliProjectName: 'dl-web-api'
      cliProjectVersion:
      cliSources: '.'
      extraProperties: |
        sonar.sources=.
        sonar.tests=.
        sonar.test.inclusions=**/*.spec.ts,**/*.test.ts
        sonar.javascript.lcov.reportPaths=coverage/lcov.info
        sonar.testExecutionReportPaths=test-report.xml

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'
  - task: SonarCloudAnalyze@1
